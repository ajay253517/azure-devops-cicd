# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  py-demo:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Runing pylint 
        run: docker run --rm -v ${PWD}:/tmp python:slim bash /tmp/ci-scripts/py-linit.sh

      # Runs a set of commands using the runners shell
      - name: Build 
        run: |
          docker build -t test:$(git log -1 --pretty=%h) . &&
          docker run -d -p 8080:8080 test:$(git log -1 --pretty=%h) 
      
      - name: Test
        run:
          docker ps -a && curl localhost:8080
      
      - name: Login to dockerhub 
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Push to docker-registry 
        env: 
          reg: ${{ secrets.REGISTRY }}
        run: 
          docker tag test:$(git log -1 --pretty=%h) "$env:reg":$(git log -1 --pretty=%h) &&
          docker push "$env:reg":$(git log -1 --pretty=%h) 